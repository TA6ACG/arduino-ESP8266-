#include <OneWire.h> // OneWire kütüphanesini ekliyoruz.
#include <dht11.h>
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 16, 2);
#define DHT11PIN 16
dht11 DHT11;
// 1. Sıcaklık sensörünü bağladığımız dijital pini 2 olarak belirliyoruz.
int DS18S20_1_Pin = 2;//D9
// 2. Sıcaklık sensörünü bağladığımız dijital pini 3 olarak belirliyoruz.
int DS18S20_2_Pin = 0;//D8

// Sıcaklık Sensörleri Giriş-Çıkışları
OneWire ds1(DS18S20_1_Pin); // 1. sensör 2. Dijital pinde.
OneWire ds2(DS18S20_2_Pin); // 2. sensör 3. Dijital pinde.


void setup(void) {
  lcd.begin();
Serial.begin(9600); // Seri iletişimi başlatıyoruz.
lcd.backlight();
}

void loop(void) {
  int chk = DHT11.read(DHT11PIN);
  // 2 sensör için 2 farklı sıcaklık değişkeni oluşturup fonksiyonla bağlıyoruz.
  float temperature1 = getTemp(ds1); // 1. sensörden gelen sıcaklık değeri
  float temperature2 = getTemp(ds2); // 2. sensörden gelen sıcaklık değeri

  // Sensörlerden gelen sıcaklık değerlerini serial monitörde yazdırıyoruz.
  Serial.print("1.Sensor:");
  Serial.print(temperature1);
  Serial.print(" | ");
  Serial.print("2.Sensor:");
  Serial.print(temperature2); 
  Serial.print(" | ");
  Serial.print("Nem (%):");
  Serial.print((float)DHT11.humidity, 2); //sadece nemi alalım sıcaklığı çok yanlış ölçüyor dht11
  Serial.println(" | ");

lcd.clear();
lcd.setCursor(0, 0);
lcd.print("ic:"); lcd.print(temperature1); lcd.print(" ");
lcd.print("dis:"); lcd.print(temperature2); lcd.print(" ");
lcd.setCursor(0,1);
lcd.print("NEM: "); lcd.print((float)DHT11.humidity, 2); lcd.print("%");
  
  // 1 saniye bekliyoruz. Monitörde saniyede 1 sıcaklık değerleri yazmaya devam edecek.
  delay(1000); 
}

// Aşağıdaki fonksiyon DS18B20 sıcaklık sensörümüzden gelen verileri
// Celcius cinsinden sıcaklık değerlerine çevirmek için kullanılıyor.
// Herhangi bir değişiklik yapmamız gerekmiyor.

float getTemp(OneWire sensor){
//returns the temperature from one DS18S20 in DEG Celsius

byte data[12];
byte addr[8];

if ( !sensor.search(addr)) {
   //no more sensors on chain, reset search
   sensor.reset_search();
   return -1000;
}

if ( OneWire::crc8( addr, 7) != addr[7]) {
   Serial.println("CRC is not valid!");
   return -1000;
}

if ( addr[0] != 0x10 && addr[0] != 0x28) {
   Serial.print("Device is not recognized");
   return -1000;
}

sensor.reset();
sensor.select(addr);
sensor.write(0x44,1); // start conversion, with parasite power on at the end

byte present = sensor.reset();
sensor.select(addr);  
sensor.write(0xBE); // Read Scratchpad

for (int i = 0; i < 9; i++) { // we need 9 bytes
  data[i] = sensor.read();
}

sensor.reset_search();

byte MSB = data[1];
byte LSB = data[0];

float tempRead = ((MSB << 8) | LSB); //using two's compliment
float TemperatureSum = tempRead / 16;

return TemperatureSum;

}
